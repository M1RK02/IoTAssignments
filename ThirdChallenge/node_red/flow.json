[
    {
        "id": "de3129ac414d4a1d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c156b9af3fe917cd",
        "type": "mqtt out",
        "z": "de3129ac414d4a1d",
        "name": "Publish To Broker",
        "topic": "challenge3/id_generator",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d7d5817a8683a565",
        "x": 850,
        "y": 280,
        "wires": []
    },
    {
        "id": "6754d100ac3bbf15",
        "type": "inject",
        "z": "de3129ac414d4a1d",
        "name": "Inject Timestamp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "e36a3b9d55d4b886"
            ]
        ]
    },
    {
        "id": "e36a3b9d55d4b886",
        "type": "function",
        "z": "de3129ac414d4a1d",
        "name": "Payload Generator",
        "func": "var randomNumber = Math.floor(Math.random() * 30001);\n\nmsg.payload = {\n    id: randomNumber,\n    timestamp: msg.payload,\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 240,
        "wires": [
            [
                "08c9be06079f677d",
                "5deb6138112dd329"
            ]
        ]
    },
    {
        "id": "08c9be06079f677d",
        "type": "function",
        "z": "de3129ac414d4a1d",
        "name": "Add Row Count",
        "func": "var rowCount = context.get(\"rowCount\");\nrowCount++;\ncontext.set(\"rowCount\", rowCount);\n\nmsg.payload = {\n    \"No.\": rowCount,\n    \"ID\": msg.payload.id,\n    \"TIMESTAMP\": msg.payload.timestamp,\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "context.set(\"rowCount\", 0)",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 200,
        "wires": [
            [
                "d8bfa523fec2a874"
            ]
        ]
    },
    {
        "id": "d8bfa523fec2a874",
        "type": "csv",
        "z": "de3129ac414d4a1d",
        "name": "Convert To CSV",
        "spec": "rfc",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 840,
        "y": 200,
        "wires": [
            [
                "9def05275de87035"
            ]
        ]
    },
    {
        "id": "9def05275de87035",
        "type": "file",
        "z": "de3129ac414d4a1d",
        "name": "Write To Log",
        "filename": "ThirdChallenge/node_red/id_log.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5deb6138112dd329",
        "type": "function",
        "z": "de3129ac414d4a1d",
        "name": "Convert To Json",
        "func": "msg.payload = JSON.stringify(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "c156b9af3fe917cd"
            ]
        ]
    },
    {
        "id": "d7d5817a8683a565",
        "type": "mqtt-broker",
        "name": "Local Broker",
        "broker": "localhost",
        "port": "1884",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]